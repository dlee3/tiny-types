{
  "type": "File",
  "start": 0,
  "end": 1213,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 46,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 1213,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 46,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 40,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 40
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 9,
            "end": 18,
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 18
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 9,
              "end": 18,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9
                },
                "end": {
                  "line": 1,
                  "column": 18
                },
                "identifierName": "isDefined"
              },
              "name": "isDefined"
            },
            "local": {
              "type": "Identifier",
              "start": 9,
              "end": 18,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9
                },
                "end": {
                  "line": 1,
                  "column": 18
                },
                "identifierName": "isDefined"
              },
              "name": "isDefined"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 26,
          "end": 39,
          "loc": {
            "start": {
              "line": 1,
              "column": 26
            },
            "end": {
              "line": 1,
              "column": 39
            }
          },
          "extra": {
            "rawValue": "./isDefined",
            "raw": "'./isDefined'"
          },
          "value": "./isDefined"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 41,
        "end": 81,
        "loc": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 40
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 50,
            "end": 59,
            "loc": {
              "start": {
                "line": 2,
                "column": 9
              },
              "end": {
                "line": 2,
                "column": 18
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 50,
              "end": 59,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9
                },
                "end": {
                  "line": 2,
                  "column": 18
                },
                "identifierName": "isEqualTo"
              },
              "name": "isEqualTo"
            },
            "local": {
              "type": "Identifier",
              "start": 50,
              "end": 59,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 9
                },
                "end": {
                  "line": 2,
                  "column": 18
                },
                "identifierName": "isEqualTo"
              },
              "name": "isEqualTo"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 67,
          "end": 80,
          "loc": {
            "start": {
              "line": 2,
              "column": 26
            },
            "end": {
              "line": 2,
              "column": 39
            }
          },
          "extra": {
            "rawValue": "./isEqualTo",
            "raw": "'./isEqualTo'"
          },
          "value": "./isEqualTo"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 82,
        "end": 120,
        "loc": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 38
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 91,
            "end": 99,
            "loc": {
              "start": {
                "line": 3,
                "column": 9
              },
              "end": {
                "line": 3,
                "column": 17
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 91,
              "end": 99,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 9
                },
                "end": {
                  "line": 3,
                  "column": 17
                },
                "identifierName": "property"
              },
              "name": "property"
            },
            "local": {
              "type": "Identifier",
              "start": 91,
              "end": 99,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 9
                },
                "end": {
                  "line": 3,
                  "column": 17
                },
                "identifierName": "property"
              },
              "name": "property"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 107,
          "end": 119,
          "loc": {
            "start": {
              "line": 3,
              "column": 25
            },
            "end": {
              "line": 3,
              "column": 37
            }
          },
          "extra": {
            "rawValue": "./property",
            "raw": "'./property'"
          },
          "value": "./property"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 37\n * @param\n * {number} expectedLength\n * @return\n * {Predicate}\n ",
            "start": 121,
            "end": 234,
            "loc": {
              "start": {
                "line": 4,
                "column": 0
              },
              "end": {
                "line": 13,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc Ensures that the `value` is of `expectedLength`.\n * Applies to {@link String}s, {@link Array}s and anything that has a `.length` property.\n *\n * This function is an alias for to `property('length', isDefined(), isEqualTo(expectedLength))`\n *\n * @example <caption>Array</caption>\n * import { ensure, hasLengthOf, TinyType } from 'tiny-types';\n *\n * class Tuple extends TinyType {\n *   constructor(public readonly values: any[]) {\n *      super();\n *      ensure('Tuple', values, hasLengthOf(2));\n *   }\n * }\n *\n * @example <caption>String</caption>\n * import { ensure, hasLengthOf, TinyType } from 'tiny-types';\n *\n * class Username extends TinyType {\n *   constructor(public readonly value: string) {\n *      super();\n *      ensure('Username', value, hasLengthOf(8));\n *   }\n * }\n *\n * @param {number} expectedLength\n * @returns {Predicate}\n ",
            "start": 235,
            "end": 1093,
            "loc": {
              "start": {
                "line": 14,
                "column": 0
              },
              "end": {
                "line": 42,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 1094,
        "end": 1212,
        "loc": {
          "start": {
            "line": 43,
            "column": 0
          },
          "end": {
            "line": 45,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 1101,
          "end": 1212,
          "loc": {
            "start": {
              "line": 43,
              "column": 7
            },
            "end": {
              "line": 45,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 1110,
            "end": 1121,
            "loc": {
              "start": {
                "line": 43,
                "column": 16
              },
              "end": {
                "line": 43,
                "column": 27
              },
              "identifierName": "hasLengthOf"
            },
            "name": "hasLengthOf",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [
            {
              "type": "Identifier",
              "start": 1122,
              "end": 1136,
              "loc": {
                "start": {
                  "line": 43,
                  "column": 28
                },
                "end": {
                  "line": 43,
                  "column": 42
                },
                "identifierName": "expectedLength"
              },
              "name": "expectedLength"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "start": 1138,
            "end": 1212,
            "loc": {
              "start": {
                "line": 43,
                "column": 44
              },
              "end": {
                "line": 45,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 1144,
                "end": 1210,
                "loc": {
                  "start": {
                    "line": 44,
                    "column": 4
                  },
                  "end": {
                    "line": 44,
                    "column": 70
                  }
                },
                "argument": {
                  "type": "CallExpression",
                  "start": 1151,
                  "end": 1209,
                  "loc": {
                    "start": {
                      "line": 44,
                      "column": 11
                    },
                    "end": {
                      "line": 44,
                      "column": 69
                    }
                  },
                  "callee": {
                    "type": "Identifier",
                    "start": 1151,
                    "end": 1159,
                    "loc": {
                      "start": {
                        "line": 44,
                        "column": 11
                      },
                      "end": {
                        "line": 44,
                        "column": 19
                      },
                      "identifierName": "property"
                    },
                    "name": "property"
                  },
                  "arguments": [
                    {
                      "type": "StringLiteral",
                      "start": 1160,
                      "end": 1168,
                      "loc": {
                        "start": {
                          "line": 44,
                          "column": 20
                        },
                        "end": {
                          "line": 44,
                          "column": 28
                        }
                      },
                      "extra": {
                        "rawValue": "length",
                        "raw": "'length'"
                      },
                      "value": "length"
                    },
                    {
                      "type": "CallExpression",
                      "start": 1170,
                      "end": 1181,
                      "loc": {
                        "start": {
                          "line": 44,
                          "column": 30
                        },
                        "end": {
                          "line": 44,
                          "column": 41
                        }
                      },
                      "callee": {
                        "type": "Identifier",
                        "start": 1170,
                        "end": 1179,
                        "loc": {
                          "start": {
                            "line": 44,
                            "column": 30
                          },
                          "end": {
                            "line": 44,
                            "column": 39
                          },
                          "identifierName": "isDefined"
                        },
                        "name": "isDefined"
                      },
                      "arguments": []
                    },
                    {
                      "type": "CallExpression",
                      "start": 1183,
                      "end": 1208,
                      "loc": {
                        "start": {
                          "line": 44,
                          "column": 43
                        },
                        "end": {
                          "line": 44,
                          "column": 68
                        }
                      },
                      "callee": {
                        "type": "Identifier",
                        "start": 1183,
                        "end": 1192,
                        "loc": {
                          "start": {
                            "line": 44,
                            "column": 43
                          },
                          "end": {
                            "line": 44,
                            "column": 52
                          },
                          "identifierName": "isEqualTo"
                        },
                        "name": "isEqualTo"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 1193,
                          "end": 1207,
                          "loc": {
                            "start": {
                              "line": 44,
                              "column": 53
                            },
                            "end": {
                              "line": 44,
                              "column": 67
                            },
                            "identifierName": "expectedLength"
                          },
                          "name": "expectedLength"
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 37\n * @param\n * {number} expectedLength\n * @return\n * {Predicate}\n ",
              "start": 121,
              "end": 234,
              "loc": {
                "start": {
                  "line": 4,
                  "column": 0
                },
                "end": {
                  "line": 13,
                  "column": 3
                }
              }
            },
            {
              "type": "CommentBlock",
              "value": "*\n * @desc Ensures that the `value` is of `expectedLength`.\n * Applies to {@link String}s, {@link Array}s and anything that has a `.length` property.\n *\n * This function is an alias for to `property('length', isDefined(), isEqualTo(expectedLength))`\n *\n * @example <caption>Array</caption>\n * import { ensure, hasLengthOf, TinyType } from 'tiny-types';\n *\n * class Tuple extends TinyType {\n *   constructor(public readonly values: any[]) {\n *      super();\n *      ensure('Tuple', values, hasLengthOf(2));\n *   }\n * }\n *\n * @example <caption>String</caption>\n * import { ensure, hasLengthOf, TinyType } from 'tiny-types';\n *\n * class Username extends TinyType {\n *   constructor(public readonly value: string) {\n *      super();\n *      ensure('Username', value, hasLengthOf(8));\n *   }\n * }\n *\n * @param {number} expectedLength\n * @returns {Predicate}\n ",
              "start": 235,
              "end": 1093,
              "loc": {
                "start": {
                  "line": 14,
                  "column": 0
                },
                "end": {
                  "line": 42,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 37\n * @param\n * {number} expectedLength\n * @return\n * {Predicate}\n ",
            "start": 121,
            "end": 234,
            "loc": {
              "start": {
                "line": 4,
                "column": 0
              },
              "end": {
                "line": 13,
                "column": 3
              }
            }
          },
          {
            "type": "CommentBlock",
            "value": "*\n * @desc Ensures that the `value` is of `expectedLength`.\n * Applies to {@link String}s, {@link Array}s and anything that has a `.length` property.\n *\n * This function is an alias for to `property('length', isDefined(), isEqualTo(expectedLength))`\n *\n * @example <caption>Array</caption>\n * import { ensure, hasLengthOf, TinyType } from 'tiny-types';\n *\n * class Tuple extends TinyType {\n *   constructor(public readonly values: any[]) {\n *      super();\n *      ensure('Tuple', values, hasLengthOf(2));\n *   }\n * }\n *\n * @example <caption>String</caption>\n * import { ensure, hasLengthOf, TinyType } from 'tiny-types';\n *\n * class Username extends TinyType {\n *   constructor(public readonly value: string) {\n *      super();\n *      ensure('Username', value, hasLengthOf(8));\n *   }\n * }\n *\n * @param {number} expectedLength\n * @returns {Predicate}\n ",
            "start": 235,
            "end": 1093,
            "loc": {
              "start": {
                "line": 14,
                "column": 0
              },
              "end": {
                "line": 42,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 37\n * @param\n * {number} expectedLength\n * @return\n * {Predicate}\n ",
      "start": 121,
      "end": 234,
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 13,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc Ensures that the `value` is of `expectedLength`.\n * Applies to {@link String}s, {@link Array}s and anything that has a `.length` property.\n *\n * This function is an alias for to `property('length', isDefined(), isEqualTo(expectedLength))`\n *\n * @example <caption>Array</caption>\n * import { ensure, hasLengthOf, TinyType } from 'tiny-types';\n *\n * class Tuple extends TinyType {\n *   constructor(public readonly values: any[]) {\n *      super();\n *      ensure('Tuple', values, hasLengthOf(2));\n *   }\n * }\n *\n * @example <caption>String</caption>\n * import { ensure, hasLengthOf, TinyType } from 'tiny-types';\n *\n * class Username extends TinyType {\n *   constructor(public readonly value: string) {\n *      super();\n *      ensure('Username', value, hasLengthOf(8));\n *   }\n * }\n *\n * @param {number} expectedLength\n * @returns {Predicate}\n ",
      "start": 235,
      "end": 1093,
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7,
      "end": 8,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "isDefined",
      "start": 9,
      "end": 18,
      "loc": {
        "start": {
          "line": 1,
          "column": 9
        },
        "end": {
          "line": 1,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 19,
      "end": 20,
      "loc": {
        "start": {
          "line": 1,
          "column": 19
        },
        "end": {
          "line": 1,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 21,
      "end": 25,
      "loc": {
        "start": {
          "line": 1,
          "column": 21
        },
        "end": {
          "line": 1,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./isDefined",
      "start": 26,
      "end": 39,
      "loc": {
        "start": {
          "line": 1,
          "column": 26
        },
        "end": {
          "line": 1,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 39,
      "end": 40,
      "loc": {
        "start": {
          "line": 1,
          "column": 39
        },
        "end": {
          "line": 1,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 41,
      "end": 47,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 48,
      "end": 49,
      "loc": {
        "start": {
          "line": 2,
          "column": 7
        },
        "end": {
          "line": 2,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "isEqualTo",
      "start": 50,
      "end": 59,
      "loc": {
        "start": {
          "line": 2,
          "column": 9
        },
        "end": {
          "line": 2,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 60,
      "end": 61,
      "loc": {
        "start": {
          "line": 2,
          "column": 19
        },
        "end": {
          "line": 2,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 62,
      "end": 66,
      "loc": {
        "start": {
          "line": 2,
          "column": 21
        },
        "end": {
          "line": 2,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./isEqualTo",
      "start": 67,
      "end": 80,
      "loc": {
        "start": {
          "line": 2,
          "column": 26
        },
        "end": {
          "line": 2,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 80,
      "end": 81,
      "loc": {
        "start": {
          "line": 2,
          "column": 39
        },
        "end": {
          "line": 2,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 82,
      "end": 88,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 89,
      "end": 90,
      "loc": {
        "start": {
          "line": 3,
          "column": 7
        },
        "end": {
          "line": 3,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "property",
      "start": 91,
      "end": 99,
      "loc": {
        "start": {
          "line": 3,
          "column": 9
        },
        "end": {
          "line": 3,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 100,
      "end": 101,
      "loc": {
        "start": {
          "line": 3,
          "column": 18
        },
        "end": {
          "line": 3,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 102,
      "end": 106,
      "loc": {
        "start": {
          "line": 3,
          "column": 20
        },
        "end": {
          "line": 3,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./property",
      "start": 107,
      "end": 119,
      "loc": {
        "start": {
          "line": 3,
          "column": 25
        },
        "end": {
          "line": 3,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 119,
      "end": 120,
      "loc": {
        "start": {
          "line": 3,
          "column": 37
        },
        "end": {
          "line": 3,
          "column": 38
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc\n * undefined\n * @lineNumber\n * 37\n * @param\n * {number} expectedLength\n * @return\n * {Predicate}\n ",
      "start": 121,
      "end": 234,
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 13,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @desc Ensures that the `value` is of `expectedLength`.\n * Applies to {@link String}s, {@link Array}s and anything that has a `.length` property.\n *\n * This function is an alias for to `property('length', isDefined(), isEqualTo(expectedLength))`\n *\n * @example <caption>Array</caption>\n * import { ensure, hasLengthOf, TinyType } from 'tiny-types';\n *\n * class Tuple extends TinyType {\n *   constructor(public readonly values: any[]) {\n *      super();\n *      ensure('Tuple', values, hasLengthOf(2));\n *   }\n * }\n *\n * @example <caption>String</caption>\n * import { ensure, hasLengthOf, TinyType } from 'tiny-types';\n *\n * class Username extends TinyType {\n *   constructor(public readonly value: string) {\n *      super();\n *      ensure('Username', value, hasLengthOf(8));\n *   }\n * }\n *\n * @param {number} expectedLength\n * @returns {Predicate}\n ",
      "start": 235,
      "end": 1093,
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 1094,
      "end": 1100,
      "loc": {
        "start": {
          "line": 43,
          "column": 0
        },
        "end": {
          "line": 43,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 1101,
      "end": 1109,
      "loc": {
        "start": {
          "line": 43,
          "column": 7
        },
        "end": {
          "line": 43,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "hasLengthOf",
      "start": 1110,
      "end": 1121,
      "loc": {
        "start": {
          "line": 43,
          "column": 16
        },
        "end": {
          "line": 43,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1121,
      "end": 1122,
      "loc": {
        "start": {
          "line": 43,
          "column": 27
        },
        "end": {
          "line": 43,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "expectedLength",
      "start": 1122,
      "end": 1136,
      "loc": {
        "start": {
          "line": 43,
          "column": 28
        },
        "end": {
          "line": 43,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1136,
      "end": 1137,
      "loc": {
        "start": {
          "line": 43,
          "column": 42
        },
        "end": {
          "line": 43,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1138,
      "end": 1139,
      "loc": {
        "start": {
          "line": 43,
          "column": 44
        },
        "end": {
          "line": 43,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1144,
      "end": 1150,
      "loc": {
        "start": {
          "line": 44,
          "column": 4
        },
        "end": {
          "line": 44,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "property",
      "start": 1151,
      "end": 1159,
      "loc": {
        "start": {
          "line": 44,
          "column": 11
        },
        "end": {
          "line": 44,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1159,
      "end": 1160,
      "loc": {
        "start": {
          "line": 44,
          "column": 19
        },
        "end": {
          "line": 44,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "length",
      "start": 1160,
      "end": 1168,
      "loc": {
        "start": {
          "line": 44,
          "column": 20
        },
        "end": {
          "line": 44,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1168,
      "end": 1169,
      "loc": {
        "start": {
          "line": 44,
          "column": 28
        },
        "end": {
          "line": 44,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "isDefined",
      "start": 1170,
      "end": 1179,
      "loc": {
        "start": {
          "line": 44,
          "column": 30
        },
        "end": {
          "line": 44,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1179,
      "end": 1180,
      "loc": {
        "start": {
          "line": 44,
          "column": 39
        },
        "end": {
          "line": 44,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1180,
      "end": 1181,
      "loc": {
        "start": {
          "line": 44,
          "column": 40
        },
        "end": {
          "line": 44,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1181,
      "end": 1182,
      "loc": {
        "start": {
          "line": 44,
          "column": 41
        },
        "end": {
          "line": 44,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "isEqualTo",
      "start": 1183,
      "end": 1192,
      "loc": {
        "start": {
          "line": 44,
          "column": 43
        },
        "end": {
          "line": 44,
          "column": 52
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1192,
      "end": 1193,
      "loc": {
        "start": {
          "line": 44,
          "column": 52
        },
        "end": {
          "line": 44,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "expectedLength",
      "start": 1193,
      "end": 1207,
      "loc": {
        "start": {
          "line": 44,
          "column": 53
        },
        "end": {
          "line": 44,
          "column": 67
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1207,
      "end": 1208,
      "loc": {
        "start": {
          "line": 44,
          "column": 67
        },
        "end": {
          "line": 44,
          "column": 68
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1208,
      "end": 1209,
      "loc": {
        "start": {
          "line": 44,
          "column": 68
        },
        "end": {
          "line": 44,
          "column": 69
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1209,
      "end": 1210,
      "loc": {
        "start": {
          "line": 44,
          "column": 69
        },
        "end": {
          "line": 44,
          "column": 70
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1211,
      "end": 1212,
      "loc": {
        "start": {
          "line": 45,
          "column": 0
        },
        "end": {
          "line": 45,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1213,
      "end": 1213,
      "loc": {
        "start": {
          "line": 46,
          "column": 0
        },
        "end": {
          "line": 46,
          "column": 0
        }
      }
    }
  ]
}